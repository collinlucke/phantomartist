name: Publish PhantomArtist to GitHub

on:
  release:
    types: [created]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
      - run: npm ci
      - run: npm run lint
      - run: npm run build

  publish-gpr:
    needs: test-and-build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          registry-url: https://npm.pkg.github.com/
          scope: '@collinlucke'

      - run: npm ci

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Extract version from release tag
        id: extract_version
        run: |
          # Remove 'v' prefix if present (e.g., v1.2.3 -> 1.2.3)
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Update package.json version
        run: |
          npm version ${{ steps.extract_version.outputs.version }} --no-git-tag-version
          echo "Updated package.json to version ${{ steps.extract_version.outputs.version }}"

      - name: Commit version bump
        run: |
          git add package.json
          git commit -m "chore: bump version to ${{ steps.extract_version.outputs.version }} [skip ci]"
          git push origin HEAD:master

      - run: npm run build
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
